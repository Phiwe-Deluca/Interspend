generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(uuid())
  email              String              @unique
  passwordHash       String
  phone              String?
  country            String?
  biometricToken     String?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  wallet             Wallet?
  conversionRequests ConversionRequest[]
  alerts             Alert[]
}

model Wallet {
  id               String      @id @default(uuid())
  user             User        @relation(fields: [userId], references: [id])
  userId           String      @unique
  currency         String
  availableBalance Decimal     @default("0.0")
  reservedBalance  Decimal     @default("0.0")
  tierStatus       Tier        @default(PARTIAL)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  transactions     Transaction[]
}

enum Tier {
  PARTIAL
  FULL
}

model ConversionRequest {
  id                String            @id @default(uuid())
  user              User              @relation(fields: [userId], references: [id])
  userId            String
  sourceCurrency    String
  targetCurrency    String
  amountSource      Decimal
  amountTargetEst   Decimal?
  status            ConversionStatus  @default(PENDING)
  providerId        String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

enum ConversionStatus {
  PENDING
  CONFIRMED
  FAILED
  CANCELLED
}

model Transaction {
  id          String           @id @default(uuid())
  wallet      Wallet           @relation(fields: [walletId], references: [id])
  walletId    String
  amount      Decimal
  currency    String
  type        TransactionType
  metadata    Json?
  createdAt   DateTime         @default(now())
}

enum TransactionType {
  TOPUP
  CONVERSION
  NFC_PAYMENT
  UNLOCK
}

model Alert {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  type      String
  message   String
  read      Boolean   @default(false)
  createdAt DateTime  @default(now())
}
